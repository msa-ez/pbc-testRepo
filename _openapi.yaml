openapi: 3.0.1
info:
  title: GitLab API
  version: v4
  description: |
    An OpenAPI definition for the GitLab REST API.
    Few API resources or endpoints are currently included.
    The intent is to expand this to match the entire Markdown documentation of the API:
    <https://docs.gitlab.com/ee/api/>. Contributions are welcome.

    When viewing this on gitlab.com, you can test API calls directly from the browser
    against the `gitlab.com` instance, if you are logged in.
    The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie),
    so each request is made using your account.

    Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html)
  termsOfService: 'https://about.gitlab.com/terms/'
  license:
    name: CC BY-SA 4.0
    url: 'https://gitlab.com/gitlab-org/gitlab/-/blob/master/LICENSE'
servers:
- url: https://musical-acorn-rxq4p75p43x9gj-443.app.github.dev/
security:
  - ApiKeyAuth: []
tags:
- name: badges
  description: Operations about badges
- name: branches
  description: Operations about branches
- name: alert_management
  description: Operations about alert_managements
- name: batched_background_migrations
  description: Operations about batched_background_migrations
- name: admin
  description: Operations about admins
- name: migrations
  description: Operations about migrations
- name: applications
  description: Operations about applications
- name: avatar
  description: Operations about avatars
- name: broadcast_messages
  description: Operations about broadcast_messages
- name: bulk_imports
  description: Operations about bulk_imports
- name: application
  description: Operations about applications
- name: access_requests
  description: Operations related to access requests
- name: ci_lint
  description: Operations related to linting a CI config file
- name: ci_resource_groups
  description: Operations to manage job concurrency with resource groups
- name: ci_variables
  description: Operations related to CI/CD variables
- name: cluster_agents
  description: Operations related to the GitLab agent for Kubernetes
- name: clusters
  description: Operations related to clusters
- name: composer_packages
  description: Operations related to Composer packages
- name: conan_packages
  description: Operations related to Conan packages
- name: container_registry
  description: Operations related to container registry
- name: container_registry_event
  description: Operations related to container registry events
- name: dashboard_annotations
  description: Operations related to dashboard annotations
- name: debian_distribution
  description: Operations related to Debian Linux distributions
- name: debian_packages
  description: Operations related to Debian Linux packages
- name: dependency_proxy
  description: Operations to manage dependency proxy for a groups
- name: deploy_keys
  description: Operations related to deploy keys
- name: deploy_tokens
  description: Operations related to deploy tokens
- name: deployments
  description: Operations related to deployments
- name: dora_metrics
  description: Operations related to DevOps Research and Assessment (DORA) key metrics
- name: environments
  description: Operations related to environments
- name: error_tracking_client_keys
  description: Operations related to error tracking client keys
- name: error_tracking_project_settings
  description: Operations related to error tracking project settings
- name: feature_flags_user_lists
  description: Operations related to accessing GitLab feature flag user lists
- name: feature_flags
  description: Operations related to feature flags
- name: features
  description: Operations related to managing Flipper-based feature flags
- name: freeze_periods
  description: Operations related to deploy freeze periods
- name: generic_packages
  description: Operations related to Generic packages
- name: geo
  description: Operations related to Geo
- name: geo_nodes
  description: Operations related Geo Nodes
- name: go_proxy
  description: Operations related to Go Proxy
- name: group_export
  description: Operations related to exporting groups
- name: group_import
  description: Operations related to importing groups
- name: group_packages
  description: Operations related to group packages
- name: helm_packages
  description: Operations related to Helm packages
- name: integrations
  description: Operations related to integrations
- name: issue_links
  description: Operations related to issue links
- name: jira_connect_subscriptions
  description: Operations related to JiraConnect subscriptions
- name: maven_packages
  description: Operations related to Maven packages
- name: merge_requests
  description: Operations related to merge requests
- name: metadata
  description: Operations related to metadata of the GitLab instance
- name: metrics_user_starred_dashboards
  description: Operations related to User-starred metrics dashboards
- name: ml_model_registry
  description: Operations related to Model registry
- name: npm_packages
  description: Operations related to NPM packages
- name: nuget_packages
  description: Operations related to Nuget packages
- name: package_files
  description: Operations about package files
- name: plan_limits
  description: Operations related to plan limits
- name: project_export
  description: Operations related to exporting projects
- name: project_hooks
  description: Operations related to project hooks
- name: project_import
  description: Operations related to importing projects
- name: project_import_bitbucket
  description: Operations related to importing BitBucket projects
- name: project_import_github
  description: Operations related to importing GitHub projects
- name: project_packages
  description: Operations related to project packages
- name: projects
  description: Operations related to projects
- name: protected environments
  description: Operations related to protected environments
- name: pypi_packages
  description: Operations related to PyPI packages
- name: release_links
  description: Operations related to release assets (links)
- name: releases
  description: Operations related to releases
- name: resource_milestone_events
  description: Operations about resource milestone events
- name: rpm_packages
  description: Operations related to RPM packages
- name: rubygem_packages
  description: Operations related to RubyGems
- name: suggestions
  description: Operations related to suggestions
- name: system_hooks
  description: Operations related to system hooks
- name: terraform_state
  description: Operations related to Terraform state files
- name: terraform_registry
  description: Operations related to the Terraform module registry
- name: unleash_api
  description: Operations related to Unleash API
paths:
  /api/v4/groups/{id}/badges/{badge_id}:
    get:
      tags:
      - badges
      summary: Gets a badge of a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4GroupsIdBadgesBadgeId
      parameters:
      - name: id
        in: path
        description: The ID or URL-encoded path of the group owned by the authenticated
          user.
        required: true
        schema:
          type: string
      - name: badge_id
        in: path
        description: The badge ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Gets a badge of a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
    put:
      tags:
      - badges
      summary: Updates a badge of a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: putApiV4GroupsIdBadgesBadgeId
      parameters:
      - name: id
        in: path
        description: The ID or URL-encoded path of the group owned by the authenticated
          user.
        required: true
        schema:
          type: string
      - name: badge_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              properties:
                link_url:
                  type: string
                  description: URL of the badge link
                image_url:
                  type: string
                  description: URL of the badge image
                name:
                  type: string
                  description: Name for the badge
      responses:
        200:
          description: Updates a badge of a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
    delete:
      tags:
      - badges
      summary: Removes a badge from the group.
      description: This feature was introduced in GitLab 10.6.
      operationId: deleteApiV4GroupsIdBadgesBadgeId
      parameters:
      - name: id
        in: path
        description: The ID or URL-encoded path of the group owned by the authenticated
          user.
        required: true
        schema:
          type: string
      - name: badge_id
        in: path
        description: The badge ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        204:
          description: Removes a badge from the group.
          content: {}
  /api/v4/groups/{id}/badges:
    get:
      tags:
      - badges
      summary: Gets a list of group badges viewable by the authenticated user.
      description: This feature was introduced in GitLab 10.6.
      operationId: getApiV4GroupsIdBadges
      parameters:
      - name: id
        in: path
        description: The ID or URL-encoded path of the group owned by the authenticated
          user.
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Current page number
        schema:
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
          format: int32
          default: 20
      - name: name
        in: query
        description: Name for the badge
        schema:
          type: string
      responses:
        200:
          description: Gets a list of group badges viewable by the authenticated user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API_Entities_Badge'
    post:
      tags:
      - badges
      summary: Adds a badge to a group.
      description: This feature was introduced in GitLab 10.6.
      operationId: postApiV4GroupsIdBadges
      parameters:
      - name: id
        in: path
        description: The ID or URL-encoded path of the group owned by the authenticated
          user.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image_url
              - link_url
              properties:
                link_url:
                  type: string
                  description: URL of the badge link
                image_url:
                  type: string
                  description: URL of the badge image
                name:
                  type: string
                  description: Name for the badge
        required: true
      responses:
        201:
          description: Adds a badge to a group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Entities_Badge'
